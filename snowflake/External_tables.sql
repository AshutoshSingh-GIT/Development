// Syntax 
USE DATABASE MY_DB;
Alter schema MY_DB.INTEGRATION RENAME TO EXTERNAL;
Create  external Table IF NOT EXISTS MY_DB.External.EXT_TABLE
(
ID INT as (VALUE:C1::INT),
NAME VARCHAR(20) as (VALUE:C2::VARCHAR(20))
)
WITH 
LOCATION = <EXTERNAL_STAGE_NAME>
FILE_FORMAT=<FF_NAME>;

//External stage will be refershed automatically


Create or replace File Format MY_DB.EXTERNAL.EXT_T_FF
TYPE = CSV
field_delimiter = ','
Skip_header =1 
field_optionally_enclosed_by = '\042';

ALTER FILE FORMAT "MY_DB"."EXTERNAL".EXT_T_FF 
SET COMPRESSION = 'AUTO' FIELD_DELIMITER = ',' 
RECORD_DELIMITER = '\n' 
SKIP_HEADER = 1 
FIELD_OPTIONALLY_ENCLOSED_BY = '\042' 
TRIM_SPACE = FALSE 
ERROR_ON_COLUMN_COUNT_MISMATCH = TRUE 
ESCAPE = 'NONE' 
ESCAPE_UNENCLOSED_FIELD = '\134' 
DATE_FORMAT = 'AUTO' 
TIMESTAMP_FORMAT = 'AUTO' 
NULL_IF = ('\\N');



Create or replace storage integration EXT_TABLE_INTG
TYPE=EXTERNAL_STAGE
ENABLED=TRUE
STORAGE_PROVIDER = S3
STORAGE_ALLOWED_LOCATIONs=('s3://akkus3bucket/new_CSV/')
STORAGE_AWS_ROLE_ARN='arn:aws:iam::589990408564:role/AWS_S3_Snowflake_Integration'
--STORAGE_AWS_IAM_USER_ARN='arn:aws:iam::666340804752:user/g9j50000-s'
COMMENT= 'INTEGRATION OBJECT FOR CREATE A EXTERNAL TABLE';

Show integrations;
Desc integration EXT_TABLE_INTG;

Create or replace Stage MY_DB.EXTERNAL.EXT_T_STAGE
File_FORMAT=MY_DB.EXTERNAL.EXT_T_FF
URL='s3://akkus3bucket/new_CSV/'
Storage_Integration = EXT_TABLE_INTG;


LIST @MY_DB.EXTERNAL.EXT_T_STAGE;


CREATE OR REPLACE EXTERNAL TABLE MY_DB.EXTERNAL.EXTERNAL_TABLE_EXAMPLE
(
  "first_name" VARCHAR(5000) as (VALUE:c1::VARCHAR(5000)),
  "last_name"VARCHAR(5000) as (VALUE:c2::VARCHAR(5000)),
  "company_name"VARCHAR(5000) as (VALUE:c3::VARCHAR(5000)),
  "address"VARCHAR(5000)as (VALUE:c4::VARCHAR(5000)),
  "city"VARCHAR(5000) as (VALUE:c5::VARCHAR(5000)),
  "state"VARCHAR(5000) as (VALUE:c6::VARCHAR(5000)),
  "post"VARCHAR(5000) as (VALUE:c7::VARCHAR(5000)),
  "phone1"VARCHAR(5000) as (VALUE:c8::VARCHAR(5000)),
  "phone2"VARCHAR(5000) as (VALUE:c9::VARCHAR(5000)),
  "email"VARCHAR(5000) as (VALUE:c10::VARCHAR(5000)),
  "web"VARCHAR(5000) as (VALUE:c11::VARCHAR(5000))
  )
WITH 
LOCATION = @MY_DB.EXTERNAL.EXT_T_STAGE
Pattern = '.*-500.csv*'
--Files=('au-500.csv')
file_format= MY_DB.EXTERNAL.EXT_T_FF;


SHOW TABLES IN SCHEMA MY_DB.EXTERNAL;
--underlying File details 
DESC TABLE MY_DB.EXTERNAL.EXTERNAL_TABLE_EXAMPLE TYPE='STAGE';
--inside file details
DESC EXTERNAL TABLE MY_DB.EXTERNAL.EXTERNAL_TABLE_EXAMPLE TYPE='COLUMN';
DESC TABLE MY_DB.EXTERNAL.EXTERNAL_TABLE_EXAMPLE TYPE='COLUMN';

Select distinct METADATA$FILENAME FROM MY_DB.EXTERNAL.EXTERNAL_TABLE_EXAMPLE;
Select  distinct METADATA$FILE_ROW_NUMBER FROM MY_DB.EXTERNAL.EXTERNAL_TABLE_EXAMPLE;

SELECT*from MY_DB.EXTERNAL.EXTERNAL_TABLE_EXAMPLE;

Create or Replace SECURE View  MY_DB.EXTERNAL.SEC_VW_EXT_TAB
AS
SELECT * FROM MY_DB.EXTERNAL.EXTERNAL_TABLE_EXAMPLE;

Select * from MY_DB.EXTERNAL.SEC_VW_EXT_TAB

//Create or Replace SECURE MATERIALIZED VIEW MY_DB.EXTERNAL.MAT_VW_EXT_TAB
//COMMENT='Test view'
//AS
//SELECT * FROM MY_DB.EXTERNAL.EXTERNAL_TABLE_EXAMPLE;
//
//
//Select * from MY_DB.EXTERNAL.MAT_VW_EXT_TAB
// -- MAT VIEWS REQUIRE ENTRPRISE OR ABOVE VERSION
//Select current_version()


---------------------------------------------------------------------------------------------
CREATE TRANSIENT TABLE IF NOT EXISTS MY_DB.EXTERNAL.AU_CUSTOMERS
AS 
Select "first_name",
  "last_name",
  "company_name",
  "address",
  "city" ,
  "state",
  "post" ,
  "phone1" ,
  "phone2",
  "email",
  "web" 
from MY_DB.EXTERNAL.EXTERNAL_TABLE_EXAMPLE;

Select * from MY_DB.EXTERNAL.AU_CUSTOMERS;

Drop table MY_DB.EXTERNAL.AU_CUSTOMERS;


copy into MY_DB.EXTERNAL.TABLE_NAME
from @MY_DB.EXTERNAL.EXT_T_STAGE
--files=('my-500.csv')
pattern='.*au-500.csv*'
VALIDATION_MODE=Return_6_Rows





